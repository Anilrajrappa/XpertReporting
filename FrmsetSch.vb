Imports System.Globalization
Imports System.Net
Imports System.Net.Mail
Imports System.Threading
Public Class FrmSetsch
    Public appSch As New AppMethods.Generic
    Public Crepid As String = ""
    Public Creptype As String = ""
    Public cRepCode As String = ""
    Public iMode As Integer = 0
    Public cFromDate As String = ""
    Public cToDate As String = ""
    Public cRepFile As String = ""
    Public cRepFileExl As String = ""
    Public cRepFileRaw As String = ""
    Public gReportname As String = ""
    Public gRepGroup As String = ""

    Private Sub FrmSetsch_FormClosed(ByVal sender As Object, ByVal e As System.Windows.Forms.FormClosedEventArgs) Handles Me.FormClosed
        Me.Dispose()
    End Sub


    Private Sub Emaillist()
        Try

            Dim cexpr As String = "Select top 25 email" + vbCrLf +
                        "From" + vbCrLf +
                        "(" + vbCrLf +
                        " Select e_mail As EMAIL from lmp01106  where  E_MAIL like '%@%'" + vbCrLf +
                        " UNION " + vbCrLf +
                        "select email As EMAIL from custdym  where EMAIL   like '%@%' " + vbCrLf +
                          " UNION " + vbCrLf +
                         "select email As EMAIL from email_list  where EMAIL   like '%@%' " + vbCrLf +
                        ") a  where email <> '' and "

            Dim cexpr1 As String = "Select  email as email from  custdym where 1=2"


            If Not appSch.dset.Tables.Contains("tEMAILLIST") Then
                appSch.dmethod.SelectCmdTOSql(appSch.dset, cexpr1, "tEMAILLIST", False)
            End If

            dgvsch.SearchColumns = 0
            dgvsch.DataTable1 = appSch.dset.Tables("tEMAILLIST")
            dgvsch.FieldName = "email"
            dgvsch.Field1 = "email"
            dgvsch.BindToList = False
            dgvsch.FocusOnMe = False
            dgvsch.valueColumn = "email"
            dgvsch.Display_ColName = "Email"

            dgvsch.SQLStatement = cexpr
            dgvsch.SQLConnectionString = appSch.dmethod.cConStr


        Catch ex As Exception

        End Try
    End Sub

    Private Sub Filterlist(cRepCode As String)
        Try

            Dim cexpr As String = "select filter_id,filter_name,Filter_Display  from Xpert_filter_Mst  WHERE rep_code= '" + cRepCode + "'  AND "

            Dim cexpr1 As String = "select filter_id,filter_name,Filter_Display  from Xpert_filter_Mst  where 1=2"


            If Not appSch.dset.Tables.Contains("TFILTERLIST") Then
                appSch.dmethod.SelectCmdTOSql(appSch.dset, cexpr1, "TFILTERLIST", False)
            End If

            dgvsch.SearchColumns = 2
            dgvsch.DataTable1 = appSch.dset.Tables("TFILTERLIST")
            dgvsch.FieldName = "filter_name"
            dgvsch.Field1 = "filter_id"
            dgvsch.Field2 = "Filter_Display"
            dgvsch.BindToList = False
            dgvsch.FocusOnMe = False
            dgvsch.valueColumn = "Filter_id"
            dgvsch.Display_ColName = "Named Filter"

            dgvsch.SQLStatement = cexpr
            dgvsch.SQLConnectionString = appSch.dmethod.cConStr


        Catch ex As Exception

        End Try
    End Sub

    Private Sub FrmSetsch_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load

        Thread.CurrentThread.CurrentCulture = New Globalization.CultureInfo("en-US", False)

        '  Dim dt As DateTime = DateTime.ParseExact("23/09/2020", "yyyy-MM-dd", CultureInfo.InvariantCulture)


        If iMode = 1 Then

            grpRepSource.Visible = False
            lbls.Text = gReportname
            GroupBox4.Visible = False
            Me.Text = "Mail..."
            optPDF.Checked = True
            chkInactive.Visible = False
            Filter_name.Visible = False
            Emaillist()

            txtSubject.Text = "Xtreme Mail : <" & gReportname & ">"
            Dim cBody As String = "Dear Madam/Sir," & vbCrLf + vbCrLf +
                                  "Please find attached here with the Report from WizApp3S Xtreme Reporting System" & vbCrLf +
                                  "as per the following Parameters:" + vbCrLf + vbCrLf +
                                  "Report Name   : " & gReportname & vbCrLf &
                                  "Sent From     : " & appMain.GLOCATION_NAME & vbCrLf & vbCrLf +
                                  "Thank you," + vbCrLf +
                                  "WizApp3S Xtreme Mail" + vbCrLf + vbCrLf + vbCrLf +
                                  "P.S. THIS MAIL IS AUTOGENERATED THROUGH WIZAPP3S-XTREME REPORTING SYSTEM ." + vbCrLf +
                                  "DO NOT REPLY TO THIS MAIL."

            txtbody.Text = cBody
            GroupBox1.Visible = False
            grpRPeriod.Visible = False
            GroupBox5.Height = 300
            cmdRemove.Text = "&Send Mail"
            cmdok.Visible = False
            cmdok.Enabled = False
            optPDF.Checked = True
            dgvsch.CurrentCell = dgvsch(0, 0)
            dgvsch.CurrentCell.Selected = True
            dgvsch.Focus()
        Else
            Emaillist()

            Call getScheduler()
            getRepGroup()

            If GetLAstSch() = True Then
                dgvsch.Focus()
            Else
                optinv.Checked = True
            End If


            SetDate()


            lbls.Text = gReportname
            GetEmailSubjectBody()

            grpRepSource.Visible = True


        End If

    End Sub

    Private Sub SetDate()
        lblTo.Text = "( " & Format(DateAdd(DateInterval.Day, -NTo.Value, Now), "dd-MM-yyyy") & " )"
        Dim ND As Int32 = NTo.Value + NFrom.Value
        lblFrom.Text = "( " & Format(DateAdd(DateInterval.Day, -ND, Now), "dd-MM-yyyy") & " )"
    End Sub




    Private Sub getScheduler()
        Try
            'Dim cexpr As String = "Select sch_code,sch_name,sch_desc From Scheduler order by sch_name"
            'appSch.dmethod.SelectCmdTOSql(appSch.dset, cexpr, "tSch", False)

            'With txtSch
            '    .SearchMode = True
            '    .BindToList = True
            '    .Table = "Scheduler"
            '    .DataTable1 = appSch.dset.Tables("tSch")
            '    .FieldName = "Sch_name"
            '    .Field1 = "sch_code"
            'End With


            dtpfroms._DefaultDate = appSch.GTODAYDATE
            DTPSCHSTART._DefaultDate = appSch.GTODAYDATE
            DTPSCHSTART._value = appSch.GTODAYDATE

            optOnce.Checked = True
            DISABLEFREQ(False)

        Catch ex As Exception
            appSch.ErrorShow(ex)
        End Try
    End Sub


    Private Sub getRepGroup()
        Try
            'Dim cexpr As String = "select distinct user_rep_type from  rep_mst " + vbCrLf + _
            '                      "where InActive =0 and rep_code= '" + cRepCode + "'  order by user_rep_type"

            'appSch.dmethod.SelectCmdTOSql(appSch.dset, cexpr, "tURT", False)

            'With txtRepUser
            '    .SearchMode = True
            '    .BindToList = True
            '    .Table = "REP_MST"
            '    .DataTable1 = appSch.dset.Tables("tURT")
            '    .FieldName = "user_rep_type"
            '    .Field1 = "user_rep_type"
            'End With
        Catch ex As Exception
            appSch.ErrorShow(ex)
        End Try
    End Sub


    Private Function GetLAstSch() As Boolean
        Try

            cExpr = "Select a.*,isnull(a.inactive,0) as chkinactive From wow_xpert_Rep_sch a " + vbCrLf +
                    "where a.rep_id = '" & Crepid & "' and a.rep_type = '" & Creptype & "'"



            If appSch.dmethod.SelectCmdTOSql(appSch.dset, cExpr, "tSchList", False) = False Then
                Return False
            End If


            cExpr = "Select * From  WOW_XPERT_REPORT_SCHEDULER " + vbCrLf +
                    "where rep_id = '" & Crepid & "'"

            If appSch.dmethod.SelectCmdTOSql(appSch.dset, cExpr, "tREPSCH", False) = False Then
                Return False
            End If

            cExpr = "select a.*,b.Filter_Name from  wow_xpert_Rep_sch_det a " + vbCrLf +
                    "left outer join Xpert_filter_Mst b on a.Filter_id = b.Filter_id " + vbCrLf +
                    " where a.rep_id  = '" & Crepid & "'"

            If appSch.dmethod.SelectCmdTOSql(appSch.dset, cExpr, "TREPSCHDET", False) = False Then
                Return False
            End If


            dgvsch.AutoGenerateColumns = False
            dgvsch.DataSource = appSch.dset.Tables("TREPSCHDET")


            optRunning.Checked = True
            dtpfroms.Visible = False

            dtpfroms._DefaultDate = appSch.GTODAYDATE
            dtpfroms._value = appSch.GTODAYDATE

            With appSch.dset.Tables("tSchList")
                If .Rows.Count > 0 Then

                    Dim cEmail As String = Convert.ToString(.Rows(0).Item("Email_List"))
                    Dim cWhatsApp As String = Convert.ToString(.Rows(0).Item("whatsApp"))

                    'Dim a() As String = cEmail.Split(",")
                    'Dim b() As String = cWhatsApp.Split(",")

                    'For k As Integer = 0 To a.Length - 1
                    '    dgvsch.Rows.Add()
                    '    dgvsch.Item(0, k).Value = a(k)
                    'Next





                    Dim iToDt As Int64 = .Rows(0).Item("To_Days")
                    Dim iFDt As Int64 = .Rows(0).Item("From_Days")

                    iFDt = System.Math.Abs(iFDt) - System.Math.Abs(iToDt)

                    NTo.Value = System.Math.Abs(iToDt)
                    NFrom.Value = System.Math.Abs(iFDt)

                    If Convert.ToBoolean(.Rows(0).Item("chkinactive")) Then
                        chkInactive.Checked = True
                    Else
                        chkInactive.Checked = False
                    End If

                    If .Rows(0).Item("Attachment") = 1 Then
                        optExcel.Checked = True
                    ElseIf .Rows(0).Item("Attachment") = 2 Then
                        optPDF.Checked = True
                    Else
                        optExcel.Checked = True
                    End If

                    If .Rows(0).Item("Rpt_source") = 1 Then
                        OptUsergrp.Checked = True
                    Else
                        optinv.Checked = True
                    End If


                    If .Rows(0).Item("period_Type") = 2 Then
                        optfix.Checked = True
                        dtpfroms.Visible = True
                        dtpfroms._value = .Rows(0).Item("Fix_date_value")
                        NFrom.Value = 0

                    Else
                        optRunning.Checked = True
                        dtpfroms.Visible = False
                    End If

                End If
            End With




            With appSch.dset.Tables("tREPSCH")
                If .Rows.Count > 0 Then

                    Dim iSCH_FREQ As Integer = 1

                    Dim iWeek As Integer = 0


                    iSCH_FREQ = .Rows(0).Item("SCH_FREQ")

                    Dim iSCH_FREQ_TYPE As Integer = 1

                    iSCH_FREQ_TYPE = .Rows(0).Item("SCH_FREQ_TYPE")

                    If Not Convert.IsDBNull(.Rows(0).Item("WEEK_DAY")) Then
                        iWeek = .Rows(0).Item("WEEK_DAY")
                    Else
                        .Rows(0).Item("WEEK_DAY") = 0
                    End If

                    If iWeek = 1 Then
                        cmbWeek.Text = "Monday"
                    ElseIf iWeek = 2 Then
                        cmbWeek.Text = "Tuesday"
                    ElseIf iWeek = 3 Then
                        cmbWeek.Text = "Wednesday"
                    ElseIf iWeek = 4 Then
                        cmbWeek.Text = "Thursday"
                    ElseIf iWeek = 5 Then
                        cmbWeek.Text = "Friday"
                    ElseIf iWeek = 6 Then
                        cmbWeek.Text = "Saturday"
                    ElseIf iWeek = 7 Then
                        cmbWeek.Text = "Sunday"
                    End If


                    If iSCH_FREQ = 1 Then
                        optOnce.Checked = True
                        DISABLEFREQ(False)
                    Else
                        optRecurring.Checked = True
                        DISABLEFREQ(True)
                    End If


                    If iSCH_FREQ_TYPE = 1 Then
                        optD.Checked = True
                    ElseIf iSCH_FREQ_TYPE = 2 Then
                        optW.Checked = True
                    ElseIf iSCH_FREQ_TYPE = 3 Then
                        optF.Checked = True
                    ElseIf iSCH_FREQ_TYPE = 4 Then
                        optM.Checked = True
                    ElseIf iSCH_FREQ_TYPE = 6 Then
                        optQ.Checked = True
                    ElseIf iSCH_FREQ_TYPE = 7 Then
                        optH.Checked = True
                    ElseIf iSCH_FREQ_TYPE = 8 Then
                        optY.Checked = True
                    End If

                    DTPSCHSTART._value = .Rows(0).Item("SCH_START_DT")
                    DTPSCHTIME.Value = .Rows(0).Item("SCH_START_TIME")
                End If
            End With


            Return True
        Catch ex As Exception
            appSch.ErrorShow(ex)
        End Try
    End Function


    Private Sub GetEmailSubjectBody()
        Try
            cExpr = "Select a.* from  wow_xpert_Rep_crm a (NOLOCK) join  wow_xpert_rep_sch b (NOLOCK) on a.rep_id = b.rep_id " + vbCrLf +
                    "where b.rep_id = '" & Crepid & "' and b.rep_type = '" & Creptype & "' and a.rep_code= '" & cRepCode & "'"

            If appSch.dmethod.SelectCmdTOSql(appSch.dset, cExpr, "tMatter", False) = False Then
                Return
            End If

            With appSch.dset.Tables("tMatter")
                If .Rows.Count > 0 Then
                    txtSubject.Text = Convert.ToString(.Rows(0).Item("Subject"))
                    txtbody.Text = Convert.ToString(.Rows(0).Item("Email"))
                Else
                    txtSubject.Text = "Xtreme Mail : <" & gReportname & ">"
                    'Dim cBody As String = "Dear Madam/Sir," & vbCrLf + vbCrLf + _
                    '                      "Please find attached here with the Report from WizApp3S Xtreme Reporting System" & vbCrLf + _
                    '                      "as per the following Parameters:" + vbCrLf + vbCrLf + _
                    '                      "Report Name   : " & gReportname & vbCrLf & _
                    '                      "Period        : " & cFromDate & " TO " & cToDate & vbCrLf & _
                    '                      "Sent From     : " & cLocEmail & vbCrLf & vbCrLf + _
                    '                      "Thank you," + vbCrLf + _
                    '                      "WizApp3S Xtreme Mail" + vbCrLf + vbCrLf + vbCrLf + _
                    '                      "P.S. THIS MAIL IS AUTOGENERATED THROUGH WIZAPP3S-XTREME REPORTING SYSTEM ." + vbCrLf + _
                    '                      "     DO NOT REPLY TO THIS MAIL."
                End If
            End With

        Catch ex As Exception

        End Try
    End Sub

    Private Sub txtSch_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs)
        If e.KeyCode = Keys.Enter Then
            NFrom.Focus()
        End If
    End Sub

    'Private Sub txtSch_Validated(ByVal sender As Object, ByVal e As System.EventArgs)
    '    If txtSch.Text <> "" Then
    '        Dim cCode As String = Convert.ToString(txtSch.Tag)
    '        Dim drow() As DataRow = appSch.dset.Tables("tSch").Select("sch_code = '" & cCode & "'")
    '        If drow.Length > 0 Then
    '            lblschDesc.Text = Convert.ToString(drow(0).Item("sch_desc"))
    '        End If
    '    Else
    '        lblschDesc.Text = ""
    '    End If

    'End Sub

    Public Sub New()
        ' This call is required by the Windows Form Designer.
        InitializeComponent()

        ' Add any initialization after the InitializeComponent() call.
        'Initialize_Object(appSch, appMain)
        appMain.Initialize_Object(appSch, appMain)
    End Sub

    Private Sub cmdsch_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        'Dim frm As New FrmSCH
        'frm._AppMethod = appMain
        'frm._AppScheduler = New AppMethods.clsScheduler
        'frm.G_AppMethod = appMain
        'frm.INIT_SCHEDULER()
        'frm.MdiParent = MDIParent1
        'frm.Show()
    End Sub

    Private Sub NFrom_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles NFrom.ValueChanged
        'lblFrom.Text = "( " & Format(DateAdd(DateInterval.Day, NFrom.Value, Now), "dd-MM-yyyy") & " )"
        SetDate()
    End Sub

    Private Sub NTo_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles NTo.ValueChanged
        ' lblTo.Text = "( " & Format(DateAdd(DateInterval.Day, NTo.Value, Now), "dd-MM-yyyy") & " )"
        SetDate()
    End Sub

    Private Sub cmdok_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdok.Click

        If ValidateValue() = True And Trim(Crepid) <> "" Then
            If MsgBox("Are you Sure to Save This Scheduling Details.", MsgBoxStyle.Information + MsgBoxStyle.YesNo, "WizApp3S Xtreme Reporting") = MsgBoxResult.Yes Then
                If SaveSCH() = True Then
                    Me.Close()
                End If
            End If
        End If

    End Sub


    Private Function ValidateValue() As Boolean

        If optW.Checked And cmbWeek.Text = "" Then
            MsgBox("Week Day Not Define... " & vbCrLf & "Plz Define Week Day For This Report.", MsgBoxStyle.Critical, "WizApp3s Xtreme Reporting")
            cmbWeek.Focus()
            Return False
        End If


        If dgvsch.RowCount > 0 Then
            If Trim(Convert.ToString(dgvsch.Item(0, 0).Value)) = "" Then
                MsgBox("Receipents Not Define..." & vbCrLf & "Plz Define Receipents For This Report", MsgBoxStyle.Critical, "WizApp3s Xtreme Reporting")
                dgvsch.Focus()
                Return False
            End If
        End If

        Return True
    End Function


    Private Function SaveSCH() As Boolean
        Try
            'Get Emaillist
            Dim cEmail As String = ""
            Dim cWhatsapp As String = ""
            Dim cExpr As String = ""
            Dim iFrom As Integer = NFrom.Value
            Dim iTo As Integer = NTo.Value

            'Rep_sch_det

            'Dim cSchcode As String = Convert.ToString(txtSch.Tag)
            Dim cSchcode As String = appSch.GLOCATION + Mid(Guid.NewGuid.ToString(), 1, 5)

            cSchcode = cSchcode.ToUpper()

            iTo = -NTo.Value

            Dim ND As Int32 = NTo.Value + NFrom.Value

            iFrom = -ND

            For i As Integer = 0 To dgvsch.Rows.Count - 1
                If Convert.ToString(dgvsch.Item(0, i).Value).Trim <> "" Then
                    cEmail = cEmail + IIf(cEmail = "", "", ",") + ((dgvsch.Item(0, i).Value).ToString).Trim
                End If
            Next




            appSch.dmethod.BeginTran()

            cExpr = "Delete From  wow_xpert_REPORT_SCHEDULER where rep_id = '" & Crepid & "'"

            If appSch.dmethod.SelectCmdTOSql(cExpr) = False Then
                appSch.dmethod.RollBackTran()
                Return False
            End If


            ' Rep_sch

            cExpr = "Delete From  wow_xpert_Rep_Sch where rep_id = '" & Crepid & "' and rep_type = '" & Creptype & "'"

            If appSch.dmethod.SelectCmdTOSql(cExpr) = False Then
                appSch.dmethod.RollBackTran()
                Return False
            End If

            'Rep Crm
            cExpr = "Delete From  wow_xpert_Rep_crm where rep_id = '" & Crepid & "' and rep_code = '" & cRepCode & "'"

            If appSch.dmethod.SelectCmdTOSql(cExpr) = False Then
                appSch.dmethod.RollBackTran()
                Return False
            End If



            'rep_sch_det

            cExpr = "Delete From  wow_xpert_Rep_sch_det where rep_id = '" & Crepid & "'"

            If appSch.dmethod.SelectCmdTOSql(cExpr) = False Then
                appSch.dmethod.RollBackTran()
                Return False
            End If

            cExpr = ""
            Dim iType As Integer = 1
            Dim iRSource As Integer = 0
            Dim iinactive As Integer = 0
            Dim cUserGrp As String = ""

            Dim iPeriodType As Integer = 1
            Dim cFixPeriod As String = ""

            If optExcel.Checked = True Then
                iType = 1 ' CSV
            ElseIf optPDF.Checked = True Then
                iType = 2
            Else
                iType = 1
            End If

            If OptUsergrp.Checked = True Then
                iRSource = 1
                cUserGrp = gRepGroup
            End If

            If chkInactive.Checked = True Then
                iinactive = 1
            Else
                iinactive = 0
            End If

            If optfix.Checked = True Then
                iPeriodType = 2
                cFixPeriod = dtpfroms._value.ToString("yyyy-MM-dd")
                iFrom = 0
            End If


            Dim SCH_FREQ As Integer = 1
            Dim SCH_FREQ_TYPE As Integer = 1

            Dim cSCHSTARTDT As String = ""
            Dim cSCHNEXTRUNDT As String = ""

            Dim cSCHSTARTTIME As String = ""
            Dim iWeekday As Integer = 0


            If optOnce.Checked Then
                SCH_FREQ = 1
            Else
                SCH_FREQ = 2
            End If

            If optD.Checked Then
                SCH_FREQ_TYPE = 1
                cSCHNEXTRUNDT = DTPSCHSTART._value.ToString("yyyy-MM-dd") + " " + DTPSCHTIME.Value.ToString("HH:mm")
            ElseIf optW.Checked Then

                SCH_FREQ_TYPE = 2


                Dim iWD As Integer = DatePart(DateInterval.Weekday, DTPSCHSTART._value, FirstDayOfWeek.Monday)

                If cmbWeek.Text.Trim().ToUpper = "MONDAY" Then
                    iWeekday = 1
                ElseIf cmbWeek.Text.Trim().ToUpper = "TUESDAY" Then
                    iWeekday = 2
                ElseIf cmbWeek.Text.Trim().ToUpper = "WEDNESDAY" Then
                    iWeekday = 3
                ElseIf cmbWeek.Text.Trim().ToUpper = "THURSDAY" Then
                    iWeekday = 4
                ElseIf cmbWeek.Text.Trim().ToUpper = "FRIDAY" Then
                    iWeekday = 5
                ElseIf cmbWeek.Text.Trim().ToUpper = "SATURDAY" Then
                    iWeekday = 6
                ElseIf cmbWeek.Text.Trim().ToUpper = "SUNDAY" Then
                    iWeekday = 7
                Else
                    iWeekday = 0
                End If
                cSCHNEXTRUNDT = DTPSCHSTART._value.AddDays(0).ToString("yyyy-MM-dd") + " " + DTPSCHTIME.Value.ToString("HH:mm")
            ElseIf optF.Checked Then
                SCH_FREQ_TYPE = 3
                cSCHNEXTRUNDT = DTPSCHSTART._value.AddDays(15).ToString("yyyy-MM-dd") + " " + DTPSCHTIME.Value.ToString("HH:mm")
            ElseIf optM.Checked Then
                SCH_FREQ_TYPE = 4
                cSCHNEXTRUNDT = DTPSCHSTART._value.AddMonths(1).ToString("yyyy-MM-dd") + " " + DTPSCHTIME.Value.ToString("HH:mm")
            ElseIf optQ.Checked Then
                SCH_FREQ_TYPE = 6
                cSCHNEXTRUNDT = DTPSCHSTART._value.AddMonths(3).ToString("yyyy-MM-dd") + " " + DTPSCHTIME.Value.ToString("HH:mm")
            ElseIf optH.Checked Then
                SCH_FREQ_TYPE = 7
                cSCHNEXTRUNDT = DTPSCHSTART._value.AddMonths(6).ToString("yyyy-MM-dd") + " " + DTPSCHTIME.Value.ToString("HH:mm")
            ElseIf optY.Checked Then
                SCH_FREQ_TYPE = 8
                cSCHNEXTRUNDT = DTPSCHSTART._value.AddMonths(12).ToString("yyyy-MM-dd") + " " + DTPSCHTIME.Value.ToString("HH:mm")
            End If

            If optOnce.Checked Then
                SCH_FREQ_TYPE = 1
                cSCHNEXTRUNDT = DTPSCHSTART._value.ToString("yyyy-MM-dd") + " " + DTPSCHTIME.Value.ToString("HH:mm")
            End If


            cSCHSTARTDT = DTPSCHSTART._value.ToString("yyyy-MM-dd")
            cSCHSTARTTIME = "1900-01-01 " + DTPSCHTIME.Value.ToString("HH:mm")


            cExpr = "INSERT  wow_xpert_REPORT_SCHEDULER (Rep_id,SCH_CODE,SCH_FREQ,SCH_FREQ_TYPE,SCH_START_DT,SCH_START_TIME,LAST_UPDATE,SCH_NEXT_RUN_DT,PROCESSED,WEEK_DAY)" + vbCrLf +
                    "values('" & Crepid & "','" & cSchcode & "'," & SCH_FREQ & "," & SCH_FREQ_TYPE & ",'" & cSCHSTARTDT & "','" + cSCHSTARTTIME + "','1900-01-01','" + cSCHNEXTRUNDT + "',0," & iWeekday & ")"

            If appSch.dmethod.SelectCmdTOSql(cExpr) = False Then
                appSch.dmethod.RollBackTran()
                Return False
            End If


            'Rep_sch

            cExpr = "INSERT  wow_xpert_Rep_Sch (Rep_id,Rep_type,Sch_code,From_Days,TO_Days,Email_list,Attachment,Rpt_source,Rpt_usergrp,period_Type,Fix_date_value,inactive,Amount,N_Minutes,whatsApp,N_DAYS)" + vbCrLf +
                         "values('" & Crepid & "','" & Creptype & "','" & cSchcode & "'," & iFrom & "," & iTo & ",'" & cEmail & "'," & iType & "," & iRSource & ",'" & cUserGrp & "'," & iPeriodType & ",'" & cFixPeriod & "'," & iinactive & ",0,0,'" & cWhatsapp & "',1)"



            If appSch.dmethod.SelectCmdTOSql(cExpr) = False Then
                appSch.dmethod.RollBackTran()
                Return False
            End If

            'Rep crm

            cExpr = "INSERT  wow_xpert_Rep_crm (Rep_id,Rep_code,Send_sms,sms,send_email,subject,email)" + vbCrLf +
                    "values('" & Crepid & "','" & cRepCode & "',0,'',1,'" & txtSubject.Text & "','" & txtbody.Text & "')"

            If appSch.dmethod.SelectCmdTOSql(cExpr) = False Then
                appSch.dmethod.RollBackTran()
                Return False
            End If


            'Rep_Sch_det
            For Each Dr As DataRow In appSch.dset.Tables("TREPSCHDET").Rows

                If (Convert.ToString(Dr("email_id")) <> "") Then

                    cExpr = "INSERT  wow_xpert_Rep_sch_det (Rep_id,email_id,WhatsApp,Filter_id)" + vbCrLf +
                                 "values('" & Crepid & "','" & Convert.ToString(Dr("email_id")) & "', '" + Convert.ToString(Dr("WhatsApp")) + "' , '" + Convert.ToString(Dr("Filter_id")) + "' ) "

                    If appSch.dmethod.SelectCmdTOSql(cExpr) = False Then
                        appSch.dmethod.RollBackTran()
                        Return False
                    End If
                End If

            Next




            appSch.dmethod.CommitTran()
            Return True



        Catch ex As Exception
            appSch.dmethod.RollBackTran()
            appSch.ErrorShow(ex)
            Return False
        End Try
    End Function



    Private Sub cmdRemove_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdRemove.Click
        If iMode = 1 Then
            If MsgBox("Are you Sure to Send This Mail.", MsgBoxStyle.Information + MsgBoxStyle.YesNo, "WizApp3S Xtreme Reporting") = MsgBoxResult.Yes Then
                If ReportEmailing() = False Then
                    Return
                Else
                    Me.Close()
                End If
            End If
        Else
            If MsgBox("Are you Sure to Remove This Scheduling From Report.", MsgBoxStyle.Information + MsgBoxStyle.YesNo, "WizApp3S Xtreme Reporting") = MsgBoxResult.Yes Then
                If RemoveSch() = True Then
                    Me.Close()
                End If
            End If
        End If
    End Sub

    Private Function INTERNET(ByVal cAdd As String) As Boolean

        Dim url As New System.Uri("http://" + cAdd)

        Dim pingurl As String = String.Format("{0}", url.Host)
        Dim host As String = pingurl
        Dim p As New System.Net.NetworkInformation.Ping
        Try
            Dim reply As System.Net.NetworkInformation.PingReply = p.Send(host, 3000)
            If reply.Status = NetworkInformation.IPStatus.Success Then
                Return True
            End If
        Catch ex As Exception
            Return False
        End Try

    End Function

    Private Function ReportEmailing() As Boolean
        Try

            Me.Cursor = Cursors.WaitCursor
            Dim cHoEmail As String = "", cLocEmail As String = ""
            Dim cSMTP As String = "", cPwd As String = ""
            Dim PortNo As String = "587"
            Dim cSSL As Boolean = True
            Dim cEmaillist As String = ""
            Dim cFile As String = ""

            cExpr = "SELECT primary_Email, primary_email_smtp, ISNULL(Primary_email_pwd,'') AS Primary_email_pwd,ISNULL(Primary_email_port,587) as Primary_email_port, ISNULL(Primary_email_SSL,1) as Primary_email_SSL  FROM location WHERE DEPT_ID = '" & appMain.GLOCATION & "'"

            appMain.dmethod.SelectCmdTOSql(appMain.dset, cExpr, "tEmailDetails", False, False)


            With appMain.dset.Tables("tEmailDetails").Rows(0)
                cLocEmail = Convert.ToString(.Item("primary_email"))
                cPwd = Trim(appMain.Encrypt(.Item("primary_email_pwd")))
                cSMTP = Convert.ToString(.Item("primary_email_smtp"))
                PortNo = Convert.ToString(.Item("primary_email_port"))
                cSSL = .Item("primary_email_SSL")
            End With

            If cLocEmail = "" Then
                MsgBox("Pls Specify Primary Email Details...", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "WizApp3S Xtreme Reporting")
                Return False
            End If

            If cSMTP = "" Then
                MsgBox("Pls Specify Primary Mail Smtp Details...", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "WizApp3S Xtreme Reporting")
                Return False
            End If


            For i As Integer = 0 To dgvsch.Rows.Count - 1
                If Convert.ToString(dgvsch.Item(0, i).Value).Trim <> "" Then
                    cEmaillist = cEmaillist + IIf(cEmaillist = "", "", ",") + ((dgvsch.Item(0, i).Value).ToString).Trim
                End If
            Next

            If cEmaillist.Length < 1 Then
                MsgBox("Pls Specify Recipients Details...", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "WizApp3S Xtreme Reporting")
                Return False
            End If

            If INTERNET("www.google.com") = False Then
                MsgBox("Internet not available...", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "WizApp3S Xtreme Reporting")
                Return False
            End If

            If optExcel.Checked Then
                cFile = cRepFileExl
            ElseIf optPDF.Checked Then
                cFile = cRepFile
            Else
                cFile = cRepFile
            End If


            Dim a() As String = cEmaillist.Split(",")

            If a.Length > 0 Then
                For i As Integer = 0 To a.Length - 1
                    Dim cEmail(0) As String
                    cEmail(0) = a(i)
                    SEND_EMAIL(cSMTP, cLocEmail, cPwd, cEmail, txtSubject.Text, txtbody.Text, cFile, Convert.ToInt32(PortNo), cSSL)
                Next
            End If

            Return True
        Catch ex As Exception
            appMain.ErrorShow(ex)
        Finally
            Me.Cursor = Cursors.Default
        End Try

    End Function

    Public Function SEND_EMAIL(ByVal cHost As String, ByVal cFrom As String, _
                              ByVal cFromPassword As String, ByVal cTo As String(), _
                              ByVal cSubject As String, ByVal cBody As String, _
                              ByVal cAttachment As String, Optional ByVal PortNo As Integer = 25, Optional ByVal ssl As Boolean = True) As Boolean

        Dim rMail As Mail.SmtpClient
        Dim rmsg As Mail.MailMessage
        Dim addfrom, addto As Mail.MailAddress

        rmsg = New System.Net.Mail.MailMessage

        Try
            rmsg.IsBodyHtml = True

            addfrom = New System.Net.Mail.MailAddress(cFrom)
            rmsg.From = addfrom

            For Each Str As String In cTo
                addto = New System.Net.Mail.MailAddress(Str)
                rmsg.To.Add(addto)
            Next


            rmsg.Subject = cSubject

            If cAttachment <> "" Then
                Dim item As New Mail.Attachment(cAttachment)
                rmsg.Attachments.Add(item)
            End If

            rmsg.Body = cBody

            rMail = New Mail.SmtpClient(cHost, PortNo)

            rMail.Timeout = 500000

            rMail.EnableSsl = ssl
            rMail.UseDefaultCredentials = False
            rMail.Credentials = New NetworkCredential(cFrom, cFromPassword)

            rMail.DeliveryMethod = Mail.SmtpDeliveryMethod.Network

            rmsg.Priority = Mail.MailPriority.High
            rMail.Send(rmsg)

            Return True

        Catch ex As Exception
            appMain.ErrorShow(ex)
        Finally
            rmsg = Nothing
            rMail = Nothing
            ' rmsg.Dispose()
        End Try


    End Function




    Private Function RemoveSch() As Boolean
        Try
            appSch.dmethod.BeginTran()


            cExpr = "Delete From  wow_xpert_Rep_Sch_det where rep_id = '" & Crepid & "'"

            If appSch.dmethod.SelectCmdTOSql(cExpr) = False Then
                appSch.dmethod.RollBackTran()
                Return False
            End If

            cExpr = "Delete From  wow_xpert_Rep_crm where rep_id = '" & Crepid & "' and rep_code = '" & cRepCode & "'"

            If appSch.dmethod.SelectCmdTOSql(cExpr) = False Then
                appSch.dmethod.RollBackTran()
                Return False
            End If


            cExpr = "Delete From  WOW_xpert_REPORT_SCHEDULER where rep_id = '" & Crepid & "' "

            If appSch.dmethod.SelectCmdTOSql(cExpr) = False Then
                appSch.dmethod.RollBackTran()
                Return False
            End If

            appSch.dmethod.CommitTran()
            Return True

        Catch ex As Exception
            appSch.dmethod.RollBackTran()
        End Try
    End Function

    Private Sub dgvsch_CellContentClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvsch.CellContentClick
        Try


        Catch ex As Exception

        End Try
    End Sub

    Private Sub optRunning_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optRunning.CheckedChanged
        dtpfroms.Visible = Not optRunning.Checked
    End Sub


    Private Sub NTo_Validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles NTo.Validated
        SetDate()
    End Sub

    Private Sub NFrom_Validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles NFrom.Validated
        SetDate()
    End Sub

    Private Sub optOnce_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optOnce.CheckedChanged

        If optOnce.Checked Then
            DISABLEFREQ(False)
            cmbWeek.Enabled = False
        Else
            DISABLEFREQ(True)
            cmbWeek.Enabled = optW.Checked
        End If

    End Sub

    Private Sub DISABLEFREQ(ByVal bMode As Boolean)
        optD.Enabled = bMode
        optW.Enabled = bMode
        optF.Enabled = bMode
        optM.Enabled = bMode
        optQ.Enabled = bMode
        optH.Enabled = bMode
        optY.Enabled = bMode

    End Sub

    Private Sub optW_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optW.CheckedChanged
        cmbWeek.Enabled = optW.Checked
        grpRPeriod.Enabled = optW.Checked
    End Sub

    Private Sub dgvsch_CellEnter(sender As Object, e As DataGridViewCellEventArgs) Handles dgvsch.CellEnter
        Try
            Dim cCol As String = dgvsch.Columns(e.ColumnIndex).Name.ToUpper()
            If cCol = "EMAIL" Then
                Emaillist()
            ElseIf cCol = "FILTER_NAME" Then
                Filterlist(cRepCode)
            End If

        Catch ex As Exception
            appSch.ErrorShow(ex)
        End Try
    End Sub

    Private Sub optinv_CheckedChanged(sender As Object, e As EventArgs) Handles optinv.CheckedChanged

    End Sub

    Private Sub optM_CheckedChanged(sender As Object, e As EventArgs) Handles optM.CheckedChanged, optD.CheckedChanged, optY.CheckedChanged, optQ.CheckedChanged, optH.CheckedChanged
        Try
            grpRPeriod.Enabled = (optD.Checked Or optW.Checked)
        Catch ex As Exception

        End Try
    End Sub
End Class